# e-Blogging-System
The e-Blogging System is a web platform designed to provide a  seamless blogging experience for users. This project aims to offer an  intuitive and accessible space where users can create, manage, and  share their blog posts on various topics. 

DEVELOPMENT CODE 
 
Module-wise Development code : 
1: Create the Database 
 
CREATE TABLE users ( 
    id INT AUTO_INCREMENT PRIMARY KEY, 
    username VARCHAR(50) NOT NULL, 
    email VARCHAR(100) NOT NULL UNIQUE, 
    password VARCHAR(255) NOT NULL 
); 
 
CREATE TABLE posts ( 
    id INT AUTO_INCREMENT PRIMARY KEY, 
    user_id INT NOT NULL, 
    title VARCHAR(100) NOT NULL, 
    content TEXT NOT NULL, 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE 
); 
2:  `db.php` for Database Connection 
 
<?php 
$servername = "localhost"; 
$username = "root"; 
$password = ""; // Default password for XAMPP 
$dbname = "eblogging"; 
 
// Create connection 
$conn = new mysqli($servername, $username, $password, $dbname); 
 
// Check connection 
 
 
if ($conn->connect_error) { 
    die("Connection failed: " . $conn->connect_error); 
} 
 
3:  `register.html` for User Registration 
 
<!DOCTYPE html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8"> 
    <title>Register</title> 
    <link rel="stylesheet" href="css/style.css"> 
</head> 
<body> 
    <h2>Register</h2> 
    <form action="register.php" method="POST"> 
        <input type="text" name="username" placeholder="Username" required> 
        <input type="email" name="email" placeholder="Email" required> 
        <input type="password" name="password" placeholder="Password" required> 
        <button type="submit">Register</button> 
    </form> 
    <a href="login.html">Already have an account? Login</a> 
</body> 
</html> 
``` 
 
 `register.php` for Registration Logic 
<?php 
include 'db.php'; 
 
if ($_SERVER["REQUEST_METHOD"] == "POST") { 
    $username = $_POST["username"]; 
    $email = $_POST["email"]; 
    $password = password_hash($_POST["password"], PASSWORD_BCRYPT); 
 
 
 
    $stmt = $conn->prepare("INSERT INTO users (username, email, password) VALUES (?, ?, ?)"); 
    $stmt->bind_param("sss", $username, $email, $password); 
 
    if ($stmt->execute()) { 
        header("Location: login.html"); 
    } else { 
        echo "Error: " . $stmt->error; 
    } 
 
    $stmt->close(); 
    $conn->close(); 
} 
4: `login.html` for User Login 
 
<!DOCTYPE html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8"> 
    <title>Login</title> 
    <link rel="stylesheet" href="css/style.css"> 
</head> 
<body> 
    <h2>Login</h2> 
    <form action="login.php" method="POST"> 
        <input type="text" name="username" placeholder="Username" required> 
        <input type="password" name="password" placeholder="Password" required> 
        <button type="submit">Login</button> 
    </form> 
</body> 
</html> 
 
 
 

 
`login.php` for Login Logic 
 
<?php 
include 'db.php'; 
session_start(); 
 
if ($_SERVER["REQUEST_METHOD"] == "POST") { 
    $username = $_POST["username"]; 
    $password = $_POST["password"]; 
 
    $stmt = $conn->prepare("SELECT id, password FROM users WHERE username = ?"); 
    $stmt->bind_param("s", $username); 
    $stmt->execute(); 
    $stmt->store_result(); 
    $stmt->bind_result($id, $hashed_password); 
 
    if ($stmt->fetch() && password_verify($password, $hashed_password)) { 
        $_SESSION["user_id"] = $id; 
        header("Location: dashboard.php"); 
    } else { 
        echo "Invalid credentials"; 
    } 
 
    $stmt->close(); 
    $conn->close(); 
} 
5: Create `dashboard.php` for User Dashboard 
 
<?php 
session_start(); 
if (!isset($_SESSION["user_id"])) { 
    header("Location: login.html"); 
    exit(); 
} 
 
 
?> 
 
<!DOCTYPE html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8"> 
    <title>Dashboard</title> 
    <link rel="stylesheet" href="css/style.css"> 
</head> 
<body> 
    <h2>Welcome to Your Dashboard</h2> 
    <a href="create_post.php">Create New Post</a> 
    <a href="view_posts.php">View All Posts</a> 
    <a href="logout.php">Logout</a> 
</body> 
</html> 
6: `create_post.php` for Creating Blog Posts 
 
<!DOCTYPE html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8"> 
    <title>Create Post</title> 
    <link rel="stylesheet" href="css/style.css"> 
</head> 
<body> 
    <h2>Create a New Post</h2> 
    <form action="submit_post.php" method="POST"> 
        <input type="text" name="title" placeholder="Post Title" required> 
        <textarea name="content" placeholder="Write your post here..." required></textarea> 
        <button type="submit">Submit Post</button> 
    </form> 
</body> 
</html> 

 
`submit_post.php` to Insert Post into Database 
 
<?php 
include 'db.php'; 
session_start(); 
 
if (!isset($_SESSION["user_id"])) { 
    header("Location: login.html"); 
    exit(); 
} 
 
if ($_SERVER["REQUEST_METHOD"] == "POST") { 
    $title = $_POST["title"]; 
    $content = $_POST["content"]; 
    $user_id = $_SESSION["user_id"]; 
 
    $stmt = $conn->prepare("INSERT INTO posts (user_id, title, content) VALUES (?, ?, ?)"); 
    $stmt->bind_param("iss", $user_id, $title, $content); 
 
    if ($stmt->execute()) { 
        header("Location: view_posts.php"); 
    } else { 
        echo "Error: " . $stmt->error; 
    } 
 
    $stmt->close(); 
    $conn->close(); 
} 
7: `view_posts.php` to Display All Blog Posts 
 
<?php 
include 'db.php'; 
session_start(); 
 

 
$result = $conn->query("SELECT p.title, p.content, u.username, p.created_at FROM posts p JOIN users u ON 
p.user_id = u.id ORDER BY p.created_at DESC"); 
?> 
 
<!DOCTYPE html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8"> 
    <title>All Posts</title> 
    <link rel="stylesheet" href="css/style.css"> 
</head> 
<body> 
    <h2>All Blog Posts</h2> 
    <?php while ($row = $result->fetch_assoc()): ?> 
        <div class="post"> 
            <h3><?php echo htmlspecialchars($row['title']); ?></h3> 
            <p><?php echo htmlspecialchars($row['content']); ?></p> 
            <small>By <?php echo htmlspecialchars($row['username']); ?> on <?php echo $row['created_at']; 
?></small> 
        </div> 
    <?php endwhile; ?> 
</body> 
</html> 
8: `logout.php` to Handle User Logout 
 
<?php 
session_start(); 
session_destroy(); 
header("Location: login.html"); 
exit(); 
9: Adding Basic Styling in `css/style.css` 
 
body { 
    font-family: Arial, sans-serif; 
    margin: 20px; 
10 
 
    padding: 0; 
    background-color: #f4f4f4; 
} 
 
h2 { 
    color: #333; 
} 
 
form { 
    max-width: 400px; 
    margin: auto; 
} 
 
input, textarea, button { 
    width: 100%; 
    padding: 10px; 
    margin: 5px 0; 
    border: 1px solid #ddd; 
    border-radius: 5px; 
} 
 
button { 
    background-color: #5cb85c; 
    color: white; 
    border: none; 
} 
 
.post { 
    border-bottom: 1px solid #ddd; 
    padding: 
 
 15px 0; 
}
